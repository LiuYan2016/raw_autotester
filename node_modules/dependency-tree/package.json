{
  "_args": [
    [
      {
        "raw": "dependency-tree@https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
        "scope": null,
        "escapedName": "dependency-tree",
        "name": "dependency-tree",
        "rawSpec": "https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
        "spec": "https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
        "type": "remote"
      },
      "/Users/vedvasavada/Desktop/Desktop/raw_autotester/autotester"
    ]
  ],
  "_from": "dependency-tree@>=5.7.1 <6.0.0",
  "_id": "dependency-tree@5.7.1",
  "_inCache": true,
  "_location": "/dependency-tree",
  "_phantomChildren": {},
  "_requested": {
    "raw": "dependency-tree@https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
    "scope": null,
    "escapedName": "dependency-tree",
    "name": "dependency-tree",
    "rawSpec": "https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
    "spec": "https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
  "_shasum": "9959f05883f20018399f263dc598eec4d6e6e26d",
  "_shrinkwrap": null,
  "_spec": "dependency-tree@https://registry.npmjs.org/dependency-tree/-/dependency-tree-5.7.1.tgz",
  "_where": "/Users/vedvasavada/Desktop/Desktop/raw_autotester/autotester",
  "author": {
    "name": "Joel Kemp",
    "email": "joel@mrjoelkemp.com"
  },
  "bin": {
    "dependency-tree": "bin/cli.js"
  },
  "bugs": {
    "url": "https://github.com/mrjoelkemp/node-dependency-tree/issues"
  },
  "dependencies": {
    "commander": "~2.6.0",
    "debug": "~2.2.0",
    "filing-cabinet": "^1.5.0",
    "precinct": "^3.3.0"
  },
  "description": "Get the dependency tree of a module",
  "devDependencies": {
    "babel": "~5.8.38",
    "jscs": "~2.11.0",
    "jscs-preset-mrjoelkemp": "~1.0.0",
    "mocha": "~2.0.1",
    "mock-fs": "~3.11.0",
    "rewire": "~2.5.2",
    "sinon": "~1.12.2"
  },
  "homepage": "https://github.com/mrjoelkemp/node-dependency-tree",
  "keywords": [
    "dependency",
    "tree",
    "module",
    "requirejs",
    "AMD",
    "commonjs",
    "es6",
    "sass"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "dependency-tree",
  "optionalDependencies": {},
  "readme": "### dependency-tree [![npm](http://img.shields.io/npm/v/dependency-tree.svg)](https://npmjs.org/package/dependency-tree) [![npm](http://img.shields.io/npm/dm/dependency-tree.svg)](https://npmjs.org/package/dependency-tree)\n\n> Get the dependency tree of a module\n\n`npm install --save dependency-tree`\n\n### Usage\n\n```js\nvar dependencyTree = require('dependency-tree');\n\n// Returns a dependency tree object for the given file\nvar tree = dependencyTree({\n  filename: 'path/to/a/file',\n  directory: 'path/to/all/files',\n  requireConfig: 'path/to/requirejs/config', // optional\n  webpackConfig: 'path/to/webpack/config', // optional\n  filter: path => path.indexOf('node_modules') === -1, // optional\n  nonExistent: [] // optional\n});\n\n// Returns a post-order traversal (list form) of the tree with duplicate sub-trees pruned.\n// This is useful for bundling source files, because the list gives the concatenation order.\n// Note: you can pass the same arguments as you would to dependencyTree()\nvar list = dependencyTree.toList({\n  filename: 'path/to/a/file',\n  directory: 'path/to/all/files'\n});\n```\n\n* Works for JS (AMD, CommonJS, ES6 modules) and CSS preprocessors (Sass, Stylus); basically, any module type supported by [Precinct](https://github.com/mrjoelkemp/node-precinct).\n  - For CommonJS modules, 3rd party dependencies (npm installed dependencies) are included in the tree by default\n  - Dependency path resolutions are handled by [filing-cabinet](https://github.com/mrjoelkemp/node-filing-cabinet)\n  - Supports RequireJS and Webpack loaders\n* All core Node modules (assert, path, fs, etc) are removed from the dependency list by default\n\n**Optional**\n\n* `requireConfig`: path to a requirejs config for AMD modules (allows for the result of aliased module paths)\n* `webpackConfig`: path to a webpack config for aliased modules\n* `visited`: object used for avoiding redundant subtree generations via memoization.\n* `nonExistent`: array used for storing the list of partial paths that do not exist\n* `filter`: a function used to determine if a module (and its subtree) should be included in the dependency tree\n - The function should accept an absolute filepath and return a boolean\n - If the filter returns true, the module is included in the resulting tree\n* `detective`: object with configuration specific to detectives used to find dependencies of a file\n - for example `detective.amd.skipLazyLoaded: true` tells the AMD detective to omit inner requires\n - See [precinct's usage docs](https://github.com/dependents/node-precinct#usage) for the list of module types you can pass options to.\n\nThe object form is a mapping of the dependency tree to the filesystem â€“\nwhere every key is an absolute filepath and the value is another object/subtree.\n\nExample:\n\n```js\n{\n  '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/a.js': {\n    '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/b.js': {\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/d.js': {},\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/e.js': {}\n    },\n    '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/c.js': {\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/f.js': {},\n      '/Users/mrjoelkemp/Documents/node-dependency-tree/test/example/extended/g.js': {}\n    }\n  }\n}\n```\n\nThis structure was chosen to serve as a visual representation of the dependency tree\nfor use in the [Dependents](https://github.com/mrjoelkemp/sublime-dependents) plugin.\n\n**Shell version** (assuming `npm install -g dependency-tree`):\n\n```\ndependency-tree --directory=path/to/all/supported/files [--list-form] [-c path/to/require/config] [-w path/to/webpack/config] filename\n```\n\nPrints the dependency tree of the given filename as stringified json (by default).\n\n* You can alternatively print out the list form one element per line using the `--list-form` option.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/mrjoelkemp/node-dependency-tree.git"
  },
  "scripts": {
    "test": "jscs index.js test/test.js && ./node_modules/.bin/mocha --compilers js:babel/register test/test.js"
  },
  "version": "5.7.1"
}
